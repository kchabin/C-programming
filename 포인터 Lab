#include <stdio.h>

void swap(int* x, int* y)
{
	int tmp;
	tmp = *x;
	*x = *y;
	*y = tmp;
}

int main()
{
	int a = 100, b = 200;

	printf("swap() 호출 전 a=%d, b=%d\n", a, b);
	swap(&a, &b);
	printf("swap() 호출 후 a=%d, b=%d\n", a, b);

	return 0;
}


/*두개 이상의 결과를 반환하는 함수*/
int get_line_parameter(int x1, int y1, int x2, int y2, float* slope, float* yintercept)
{
	if (x1 == x2) //분모는 0이 될 수 없음.
		return -1;
	else {
		*slope = (float)(y2 - y1) / (float)(x2 - x1);
		*yintercept = y1 - (*slope) * x1;
		return 0;
	}
}
int main(void)
{
	float s, y;
	int x1, y1, x2, y2;
	scanf("%d%d%d%d", &x1, &y1, &x2, &y2);

	if (get_line_parameter(x1, y1, x2, y2, &s, &y) == -1)
		printf("에러\n");
	else
		printf("기울기는 %f, y절편은 %f\n", s, y);
	return 0;
}


//포인터 배열
int main()
{
	int a[] = { 10, 20, 30, 40, 50 };

	//포인터를 배열처럼 사용 가능하다.
	int* p;
	p = a;
	printf("a[0]=%d a[1]=%d a[2]=%d a[3]=%d a[4]=%d\n", a[0], a[1], a[2], a[3], a[4]);
	printf("p[0]=%d p[1]=%d p[2]=%d p[3]=%d p[4]=%d\n\n", p[0], p[1], p[2], p[3], p[4]);


	printf("배열의 이름 = %u\n", a);
	printf("첫 번째 원소의 주소 = %u\n", &a[0]);

	return 0;
}




//Lab 2
#define _CRT_SECURE_NO_WARNINGS
#define SIZE 5
#include <stdio.h>

double get_array_avg(int values[], int n) //배열과 배열의 크기를 받아 평균값 계산.
{
	int i;
	double sum = 0.0;

	for(i = 0; i < n; i++) 
		sum += values[i]; //배열 이용해서 각 원소들을 모두 더해줌.

	//values[0]+values[1]

	return sum / n; //평균 = 전체 합 / 
		
}
void print_array(int values[], int n) // 배열 출력
{
	int i;
	printf("[");

	for (i = 0; i < n; i++)
		printf(" %d ", values[i]);

	printf("]\n");

}
int main()
{
	int i;
	int data[SIZE] = { 10, 20, 30, 40, 50 };
	double result;

	print_array(data, SIZE);
	result = get_array_avg(data, SIZE); //평균 값을 평균함수를 호출해서 계산한다.
	printf("배열 원소들의 평균 = %f\n", result);

	return 0;
}
