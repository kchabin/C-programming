//문제 1번
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>	
#include <stdlib.h>
 
typedef struct rec
{
	int i;
	float PI;
	char A;

}my_record;

int main()
{
	my_record* p;
	p = (my_record*)malloc(3 * sizeof(my_record)); 
	if (p == NULL)
	{
		printf("메모리 할당 오류\n");
		exit(1);
	}
	
	p[0].i = 10;
	p[1].PI = 3.14;
	p[2].A = 'a';

	printf("%d\n", p[0].i);
	printf("%f\n", p[1].PI);
	printf("%c\n", p[2].A);

	free(p);
	return 0;

}

============================================================================================

//문제 2번

#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>	
#include <stdlib.h>
 
 
int main()
{
	int i, n;
	double sum=0.0;
	double* p;
	printf("요소의 개수: ");
	scanf("%d", &n);
	p = (double*)malloc(n * sizeof(double));

	if (p == NULL)
	{
		printf("메모리 할당 오류\n");
		exit(1);
	}
	for (i = 0; i < n; i++)
	{

		printf("배열의 요소를 입력하시오: ");
		scanf("%lf", &p[i]);
		sum += p[i];
	}
	
	printf("합 = %lf\n", sum);

	free(p);
	return 0;
}

====================================================================================

//문제 3번

#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>	
#include <stdlib.h>
 
 
int main()
{
	int i, n; //반복문 i, 요소의 개수 n
	double* p;
	


	printf("요소의 개수: ");
	scanf("%d", &n);
	p = (double*)malloc(n * sizeof(double));

	if (p == NULL)
	{
		printf("메모리 할당 오류\n");
		exit(1);
	}
	double max = p[0];
	for (i = 0; i < n; i++)
	{
		printf("요소 %d: ",i+1);
		scanf("%lf", &p[i]);
		
		
		if (max < p[i])
			max = p[i];
	}

	printf("최댓값= %lf\n", max);

	free(p);
	return 0;
}
 
=========================================================================================

//문제 4번 

#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>	
#include <stdlib.h>
#define SIZE 100 //사이즈 100 선언
 
int main()
{
	 
	int* p;
	int sum = 0;

	 
	p = (int*)malloc( SIZE* sizeof(int)); //동적메모리 할당

	if (p == NULL)
	{
		printf("메모리 할당 오류\n");
		exit(1);
	}
	
	
	srand((unsigned)time(NULL)); //무작위 난수 생성
	for (int i = 0; i < SIZE; i++)
	{
		p[i] = rand() % 100; //난수 생성 정수 100개 
		sum += p[i];
	}

	int average = sum / SIZE; //평균=총합/100

	printf("평균= %d\n", average);

	free(p);
	return 0;
}
 
